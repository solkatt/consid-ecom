import Link from 'next/link'
import Head from 'next/head'
import { request } from '../../lib/datocms'
import styles from '../../styles/Product.module.css'
import { StructuredText } from 'react-datocms'

export default function Product({ data }) {
	const { product } = data

	return (
		<div className={styles.main}>
			<Head>
				<title>Consid Commerce |</title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				{/* {renderMetaTags(startPage.seo.concat(data.site.favicon))} */}
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<div className={styles.container}>
				<div className={styles.grid}>
					<div className={styles.title}>
						<h1>{product.name}</h1>
						<div className={styles.content}>
							<StructuredText data={product.description.value} />
							<h4>{product.price}</h4>
						</div>
					</div>
					<div className={styles.imageWrapper}>
						<img
							src={product.mainImage.url}
							alt='consid commerce image'
							className={styles.mainImage}
						/>
					</div>
				</div>
			</div>

			{/* 		
				<div>
					{product.alternativeImages.map((altImg) => (
						<img src={altImg.url} alt='' style={{ width: '50%' }} />
					))}
				</div>
				 */}
			<div style={{ marginTop: '50px' }}>
				<Link href='/products'>Back to products</Link>
			</div>
		</div>
	)
}

const PATHS_QUERY = `
      {
        allProducts {
        id
      }
}
      `
export const getStaticPaths = async () => {
	const productsQuery = await request({
		query: PATHS_QUERY,
	})

	const paths = []
	productsQuery.allProducts.map((p) => paths.push(`/product/${p.id}`))
	return {
		paths,
		fallback: false,
	}
}

const PRODUCT_QUERY = `
      query GetProduct($id: ItemId){
        product(filter: {id: {eq: $id }}) {
        id
    name
      price
      mainImage {
        url
      }
      alternativeImages {
        url
      }
      description {
        value
      }
  }
}
      `
export const getStaticProps = async ({ params }) => {
	const data = await request({
		query: PRODUCT_QUERY,
		variables: { id: params.id },
	})

	return {
		props: {
			data,
		},
	}
}
